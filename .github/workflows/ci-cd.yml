name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install fastapi uvicorn httpx pytest

    - name: Run tests
      run: |
        source venv/bin/activate
        pytest

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi-app:latest .

    - name: Push Docker image to Docker Hub
      run: |
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi-app:latest

    - name: Deploy to remote server
      env:
        REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
        REMOTE_USER: ${{ secrets.REMOTE_USER }}
        REMOTE_PASSWORD: ${{ secrets.REMOTE_PASSWORD }}  # Пароль для SSH
      run: |
        sudo apt-get update && sudo apt-get install -y sshpass
        sshpass -p "$REMOTE_PASSWORD" ssh -o StrictHostKeyChecking=no $REMOTE_USER@$REMOTE_HOST "
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi-app:latest
          docker stop fastapi-app || true
          docker rm fastapi-app || true
          docker run -d --name fastapi-app -p 80:8000 ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi-app:latest
        "